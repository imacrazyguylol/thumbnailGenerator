"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.description = void 0;
const request_1 = require("../../../../utility/request");
const request = (0, request_1.namespace)('https://osu.ppy.sh/api/v2/');
const _mode = [
    'osu',
    'taiko',
    'fruits',
    'mania'
];
const _genre = [
    '',
    'Unspecified',
    'Video Game',
    'Anime',
    'Rock',
    'Pop',
    'Other',
    'Novelty',
    'Hip Hop',
    'Electronic',
    'Metal',
    'Classical',
    'Folk',
    'Jazz',
];
const _language = [
    'English',
    'Chinese',
    'French',
    'German',
    'Italian',
    'Japanese',
    'Korean',
    'Spanish',
    'Swedish',
    'Russian',
    'Polish',
    'Instrumental',
    'Unspecified',
    'Other',
];
exports.description = {
    auth: 1,
    title: __filename,
    method: 'GET',
    description: 'Return list of beatmaps',
    params: [
        {
            type: 'string',
            name: 'query',
            optional: true,
            description: 'search query, song \`\`title\`\` / \`\`artist\`\`, \`\`stars\`\`, \`\`bpm\`\`, \`\`date\`\` and etc.',
        },
        {
            type: 'string',
            name: 'general',
            optional: true,
            description: '\`\`converts\`\` or \`\`follows\`\` or \`\`recommended\`\` or \`\`\`featured_artists\`\`\`',
        },
        {
            type: 'string',
            name: 'mode',
            optional: true,
            description: '\`\`osu\`\` or \`\`fruits\`\` or \`\`mania\`\` or \`\`taiko\`\`',
        },
        {
            type: 'string',
            name: 'section',
            optional: true,
            description: '\`\`ranked\`\` or \`\`qualified\`\` or \`\`loved\`\` or \`\`favourites\`\` or \`\`pending\`\` or \`\`graveyard\`\` or \`\`mine\`\`',
        },
        {
            type: 'string',
            name: 'genre',
            optional: true,
            description: '\`\`Unspecified\`\` or \`\`Video Game\`\` or \`\`Anime\`\` or \`\`Rock\`\` or \`\`Pop\`\` or \`\`Other\`\` or \`\`Novelty\`\` or \`\`Hip Hop\`\` or \`\`Electronic\`\` or \`\`Metal\`\` or \`\`Classical\`\` or \`\`Folk\`\` or \`\`Jazz\`\`',
        },
        {
            type: 'string',
            name: 'language',
            optional: true,
            description: '\`\`English\`\` or \`\`Chinese\`\` or \`\`French\`\` or \`\`German\`\` or \`\`Italian\`\` or \`\`Japanese\`\` or \`\`Korean\`\` or \`\`Spanish\`\` or \`\`Swedish\`\` or \`\`Russian\`\` or \`\`Polish\`\` or \`\`Instrumental\`\` or \`\`Unspecified\`\` or \`\`Other\`\`',
        },
        {
            type: 'string',
            name: 'include',
            optional: true,
            description: '\`\`video\`\` or \`\`storyboard\`\`',
        },
        {
            type: 'string',
            name: 'rank',
            optional: true,
            description: '\`\`XH\`\` or \`\`X\`\` or \`\`SH\`\` or \`\`S\`\` or \`\`A\`\` or \`\`B\`\` or \`\`C\`\` or \`\`D\`\`',
        },
        {
            type: 'boolean',
            name: 'nfsw',
            optional: true,
            description: '\`\`true\`\` or \`\`false\`\`',
        },
    ],
};
;
const name = async (filters) => {
    const obj = {
        q: filters?.query,
        c: filters?.general,
        m: _mode.indexOf(filters?.mode),
        s: filters?.section,
        g: _genre.indexOf(filters?.genre),
        l: _language.indexOf(filters?.language),
        e: filters?.include,
        r: filters?.rank,
        nsfw: undefined,
    };
    if (!filters?.nfsw)
        obj.nsfw = 0;
    const data = await request(`beatmapsets/search/`, {
        method: 'GET',
        params: filters,
    });
    return data;
};
exports.default = name;
//# sourceMappingURL=search.js.map